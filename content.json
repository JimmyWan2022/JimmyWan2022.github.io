{"meta":{"title":"JimmyRun 博客","subtitle":"","description":"","author":"JimmyRun","url":"https://JimmyWan2022.github.io","root":"/"},"pages":[],"posts":[{"title":"Electron创建新的项目","slug":"Electron创建新的项目","date":"2022-11-20T06:17:16.000Z","updated":"2022-11-20T06:21:18.891Z","comments":true,"path":"2022/11/20/Electron创建新的项目/","link":"","permalink":"https://jimmywan2022.github.io/2022/11/20/Electron%E5%88%9B%E5%BB%BA%E6%96%B0%E7%9A%84%E9%A1%B9%E7%9B%AE/","excerpt":"","text":"创建一个新的react app项目 创建项目脚手架资料 123https://github.com/sindresorhus/awesome-electronhttps://github.com/vitejs/awesome-vite#templates 配环境 把火绒退出，杀毒软件的锅 参考链接：https://www.cnblogs.com/makalochen/p/16154510.html 国内源的问题： 打开npm的配置文件 1npm config edit 在空白处将下面几个配置添加上去,注意如果有原有的这几项配置，就修改 123registry=https://registry.npmmirror.comelectron_mirror=https://cdn.npmmirror.com/binaries/electron/electron_builder_binaries_mirror=https://npmmirror.com/mirrors/electron-builder-binaries/ 然后关闭该窗口，重启命令行，删除node_modules文件夹，并重新安装依赖 1npm install 再次删除node_modules文件夹，并执行下面的命令清除缓存 1npm cache clean --force 再次安装 1npm install MinGW-w64安装 https://shaogui.life/2021/03/10/windows上安装minGW/ 123npm rm -g create-react-appnpm install -g create-react-appnpx create-react-app my-app add this inside package.json file before closing the “}” 123456,&quot;scripts&quot;: &#123; &quot;start&quot;: &quot;react-scripts start&quot;, &quot;build&quot;: &quot;react-scripts build&quot;, &quot;test&quot;: &quot;react-scripts test&quot;, &quot;eject&quot;: &quot;react-scripts eject&quot;&#125; Electron项目创建的三种方法 https://blog.csdn.net/weixin_40629244/article/details/115618121 克隆仓库，快速启动 克隆项目； git clone https://github.com/electron/electron-quick-start 2. 进入这个项目下； 1cd electron-quick-start 安装依赖； 1npm install 运行项目； 1npm start 打开快速启动的项目，主要有以下几个文件： (1). index.html ，渲染进程； (2). render.js，渲染进程，在index.html中引用； (3). main.js，主进程； (4). preload.js，监听DOM加载完成，在主进程中调用。 通过脚手架搭建项目 electron-forge是一个用来搭建electron项目的脚手架，不仅可以用来运行项目，还可以用来打包项目。 官网：Getting Started - Electron Forge(https://www.electronforge.io/) 如果电脑上安装了安装了最新版本的 node 可以使用 npx 创建项目，如果安装了 yarn 也可以使用 yarn 创建项目； 1npx create-electron-app my-new-app 或者 1yarn create electron-app my-new-app 运行项目； 1234// 进入项目cd my-new-app// 启动项目npm start 如果无法使用npx或是yarn安装项目，可以用传统的方法来完成。 1234567891011// 安装脚手架npm install -g @electron-forge/cli// 初始化项目electron-forge init my-new-app// 进入项目cd my-new-app// 启动项目npm start GitHub - electron-userland/electron-forge: A complete tool for creating, publishing, and installing modern Electron applications 手动创建项目 新建项目文件夹； 新建渲染进程 index.html 文件与主进程 main.js 文件； 初始化项目，创建package.json； 1npm init 请注意，package.json中的主文件必须名为main.js。 在项目中安装Electron； 虽然在全局有安装Electron，但是在写代码的时候并没有提示，所以需要进入项目中安装一下，这样就会有提示了。 cnpm i electron --save-dev 5. 编写主进程main.js代码； 123456789101112131415161718192021222324252627282930313233 const &#123; app, BrowserWindow &#125; = require(&quot;electron&quot;);const path = require(&quot;path&quot;); const createWindow = ()=&gt;&#123; // 创建窗口 const mainWindow = new BrowserWindow(&#123; width: 800, height: 600 &#125;); // 加载本地文件 mainWindow.loadFile(path.join(__dirname,&quot;index.html&quot;)); // 加载远程地址 // mainWindow.loadURL(&#x27;https://github.com&#x27;);&#125; // 监听应用的启动事件app.on(&quot;ready&quot;,createWindow); // 兼容MacOS系统的窗口关闭功能app.on(&quot;window-all-closed&quot;,()=&gt;&#123; // 非MacOS直接退出 if(process.platform!=&quot;darwin&quot;)&#123; app.quit(); &#125;&#125;); // 点击MacOS底部菜单时重新启动窗口app.on(&quot;activate&quot;,()=&gt;&#123; if(BrowserWindow.getAllWindows.length==0)&#123; createWindow(); &#125;&#125;) 引入eslint 检查代码； (1). 安装eslint； 1cnpm install -g eslint (2). 在项目中初始化eslint； 1eslint --init 初始化时会有各种选项，选项可以参考下面的结果。 运行项目； 1electron . 效果如下：","categories":[],"tags":[]},{"title":"C#项目框架选择","slug":"C-项目框架选择","date":"2022-11-20T06:05:45.000Z","updated":"2022-11-20T06:12:05.383Z","comments":true,"path":"2022/11/20/C-项目框架选择/","link":"","permalink":"https://jimmywan2022.github.io/2022/11/20/C-%E9%A1%B9%E7%9B%AE%E6%A1%86%E6%9E%B6%E9%80%89%E6%8B%A9/","excerpt":"","text":"数据接入层 框架推荐Dapper，不推荐Entity Framework 原因： 如果你是新手，不推荐Entity Framework，需要严格执行程序编写规范，EF连接数据库 才会有不错的性能。 更推荐Dapper框架，自己写SQL 而不是将大量的数据，尤其是多表连接数据 LEFT JOIN 如果使用LINQ，EF会一次性将数据读取到内存中，再进行过滤操作，性能有问题。","categories":[],"tags":[]},{"title":"一键安装v2ray","slug":"一键安装v2ray","date":"2022-11-20T05:50:20.000Z","updated":"2022-11-20T06:01:09.107Z","comments":true,"path":"2022/11/20/一键安装v2ray/","link":"","permalink":"https://jimmywan2022.github.io/2022/11/20/%E4%B8%80%E9%94%AE%E5%AE%89%E8%A3%85v2ray/","excerpt":"","text":"一键安装v2ray 1.选择VPS 强烈推荐debian系统 原因： 1.无防火墙 2.我已实验过多次 3.Centos需要自己Google，如何关闭防火墙 2.远程连接VPS 推荐使用FinalShell（https://www.jb51.net/softs/717120.html） 官网：（http://www.hostbuf.com/downloads/finalshell_install.exe） 3.申请域名（或 购买域名） 免费申请域名（https://www.freenom.com/） 购买域名（https://www.namesilo.com/） 4.在cloudfalre配置域名解析（或在域名购买网站配置域名解析） 域名——————》购买的VPS IP地址 5. 本地ping 域名，得到目标IP地址 确认域名解析成功 6.一键安装v2ray 一键安装v2ray脚本 1bash &lt;(curl -L -s https://raw.githubusercontent.com/wulabing/V2Ray_ws-tls_bash_onekey/master/install.sh) | tee v2ray_ins.log BBR加速代码: BBR加速： 1wget --no-check-certificate https://github.com/teddysun/across/raw/master/bbr.sh &amp;&amp; chmod +x bbr.sh &amp;&amp; ./bbr.sh 如果安装不了BBR请先运行以下代码： 1yum -y install wget 升级命令 123sudo apt update &amp;&amp; sudo apt upgrade#或 apt update &amp;&amp; apt upgrade","categories":[],"tags":[]},{"title":"Electron开发","slug":"Electron开发","date":"2022-11-13T03:26:22.000Z","updated":"2022-11-13T14:54:23.855Z","comments":true,"path":"2022/11/13/Electron开发/","link":"","permalink":"https://jimmywan2022.github.io/2022/11/13/Electron%E5%BC%80%E5%8F%91/","excerpt":"","text":"","categories":[],"tags":[]},{"title":"编程学习资料记录","slug":"编程学习资料记录","date":"2022-11-13T01:47:57.000Z","updated":"2022-11-13T03:27:51.996Z","comments":true,"path":"2022/11/13/编程学习资料记录/","link":"","permalink":"https://jimmywan2022.github.io/2022/11/13/%E7%BC%96%E7%A8%8B%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%E8%AE%B0%E5%BD%95/","excerpt":"","text":"快速构建静态博客 技术1. HEXO https://hexo.io/zh-cn/ 1234567891011121314#安装依赖npm install hexo-cli -g#生成名称为“blog”的博客项目hexo init blog#进入blog文件夹cd blog#安装blog博客依赖npm install#在本地启动博客项目hexo server 技术2. HUGO https://gohugo.io/ 编程资料 1.就业市场 中国国内程序员岗位需求：前端&gt;后端&gt;算法 北美：前端&gt;后端&gt;算法 加拿大多伦多岗位数量比例：1000前端 &gt; 500后端 &gt; 150 IOS = 150 安卓 其中后端：java&gt;dot Net&gt;其他 注：岗位需求随着市场变动 1.1前端 Web端主要使用 Vue 和 React框架 Vue vue（https://vuejs.org/） React react（https://reactjs.org/） 1.2后端 1.2.1 JAVA 后端主力，入门难度最低，使用最广。 1.2.2 dot net(.net) 中国国内后端需求不高，北美 国外有不少需求。中国国内后端java比较多，go也有一些。 1.2.3 Go 文档（https://studygolang.com/pkgdoc） 社区（https://studygolang.com/） go语言学习视频资料： Go从入门到精通 （https://www.youtube.com/watch?v=KZlc4Fxn5qI&amp;list=PLLPsLcbaFY20fG25TVsrCeAgXrBSrZDYU） Go语言GUI （https://www.youtube.com/watch?v=iUFegAhBMiE&amp;list=PLLPsLcbaFY22UYn_h2Q3DSUy27eqiptrk） 博客：https://www.liwenzhou.com/ 1.2.4 Node.js 用JavaScript写后端，让前端人员能后端，不需要学习新的编程语言。 1.3 跨平台 1.3.1 桌面跨平台（MAC Win Linux） 推荐1：Electron（推荐） （https://www.electronjs.org/） 优点：使用人数最多，社区最好，bug少 缺点：性能不够好，但一定是够用的 推荐2：Tauri（一般推荐） （https://tauri.app/） 优点：使用Rust语言编写，性能好，打包文件小 缺点：需要学Rust，新学一门语言 推荐3：xamarin（一般推荐） （https://dotnet.microsoft.com/en-us/apps/xamarin） 微软收购的一家跨平台技术公司 不推荐MAUI（微软的框架）bug贼多，没人解决 1.3.2 移动端跨平台 （IOS、Android、Windows phone） 推荐1：Flutter （https://flutter.dev/） 推荐2：React Native （https://reactnative.dev/） 不推荐:vue写安卓项目 1.4 Windows编程 1.5 MAC IOS编程（不熟悉） TODO 2. 面试 刷题网站 1.LeetCode：https://leetcode-cn.com/ 2.英文网站（https://leetcode.com/） 3牛客网：（https://www.nowcoder.com） 4.Web 开发练习题：（https://www.freecodecamp.org/） 5.百度前端技术学院 — 前端开发项目库：（http://ife.baidu.com） 3. 文档 快速学习一门新语言（https://learnxinyminutes.com/） 这里的教程几乎涵盖所有编程语言，完全没有废话。英文版、中文版都有。学一门新语言大概耗时 30 分钟。 文档集合（https://cloud.tencent.com/developer/doc/1271） 技术文档集合，由腾讯运营 菜鸟教程（https://www.runoob.com/）","categories":[],"tags":[{"name":"编程","slug":"编程","permalink":"https://jimmywan2022.github.io/tags/%E7%BC%96%E7%A8%8B/"}]},{"title":"博客模板选择","slug":"博客模板选择","date":"2022-11-12T17:19:22.000Z","updated":"2022-11-12T17:26:34.566Z","comments":true,"path":"2022/11/13/博客模板选择/","link":"","permalink":"https://jimmywan2022.github.io/2022/11/13/%E5%8D%9A%E5%AE%A2%E6%A8%A1%E6%9D%BF%E9%80%89%E6%8B%A9/","excerpt":"","text":"模板推荐（推荐） 1.默认模板 landscape 可以部署到GitHub 1theme: landscape 2.hexo-theme-miracle（一般） https://github.com/hifun-team/hexo-theme-miracle 缺点： 1.无法部署到GitHub 2.盒子内容溢出 1theme: hexo-theme-miracle 3.hexo-theme-pure（比较推荐） https://github.com/cofess/hexo-theme-pure 无法部署到GitHub 1theme: hexo-theme-pure","categories":[],"tags":[{"name":"博客模板选择","slug":"博客模板选择","permalink":"https://jimmywan2022.github.io/tags/%E5%8D%9A%E5%AE%A2%E6%A8%A1%E6%9D%BF%E9%80%89%E6%8B%A9/"}]},{"title":"windows文件无法删除，循环需要权限","slug":"windows文件无法删除，循环需要权限","date":"2022-11-12T16:05:23.000Z","updated":"2022-11-12T17:14:33.409Z","comments":true,"path":"2022/11/13/windows文件无法删除，循环需要权限/","link":"","permalink":"https://jimmywan2022.github.io/2022/11/13/windows%E6%96%87%E4%BB%B6%E6%97%A0%E6%B3%95%E5%88%A0%E9%99%A4%EF%BC%8C%E5%BE%AA%E7%8E%AF%E9%9C%80%E8%A6%81%E6%9D%83%E9%99%90/","excerpt":"","text":"windows文件无法删除，循环需要权限 https://zhuanlan.zhihu.com/p/82036101 删除文件，被通知需要管理员权限，同时需要&quot;A用户&quot;权限，导致文件无法删除 下载链接 https://drive.google.com/file/d/1p08SZpMdOsOYieF4vqWyAnIqm9oy12mk/view?usp=share_link","categories":[],"tags":[{"name":"windows权限","slug":"windows权限","permalink":"https://jimmywan2022.github.io/tags/windows%E6%9D%83%E9%99%90/"}]},{"title":"hexo常用命令","slug":"hexo常用命令","date":"2022-11-12T15:19:54.000Z","updated":"2022-11-12T17:25:29.435Z","comments":true,"path":"2022/11/12/hexo常用命令/","link":"","permalink":"https://jimmywan2022.github.io/2022/11/12/hexo%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/","excerpt":"","text":"hexo 123npm install hexo -g #安装 npm update hexo -g #升级 hexo init #初始化 简写 12345hexo n &quot;我的博客&quot; == hexo new &quot;我的博客&quot; #新建文章hexo p == hexo publishhexo g == hexo generate#生成hexo s == hexo server #启动服务预览hexo d == hexo deploy#部署 服务器 12345678hexo server #Hexo 会监视文件变动并自动更新，您无须重启服务器。hexo server -s #静态模式hexo server -p 5000 #更改端口hexo server -i 192.168.1.1 #自定义 IPhexo clean #清除缓存 网页正常情况下可以忽略此条命令hexo g #生成静态网页hexo d #开始部署 监视文件变动 12hexo generate #使用 Hexo 生成静态文件快速而且简单hexo generate --watch #监视文件变动 完成后部署 两个命令的作用是相同的 12345hexo generate --deployhexo deploy --generatehexo deploy -ghexo server -g 草稿 1hexo publish [layout] &lt;title&gt; 模版 123456789hexo new &quot;postName&quot; #新建文章hexo new page &quot;pageName&quot; #新建页面hexo generate #生成静态页面至public目录hexo server #开启预览访问端口（默认端口4000，&#x27;ctrl + c&#x27;关闭server）hexo deploy #将.deploy目录部署到GitHubhexo new [layout] &lt;title&gt;hexo new photo &quot;My Gallery&quot;hexo new &quot;Hello World&quot; --lang tw 变量 描述 layout 描述 title 标题 date 文件建立日期 12345678title: 使用Hexo搭建个人博客layout: postdate: 2014-03-03 19:07:43comments: truecategories: Blogtags: [Hexo]keywords: Hexo, Blogdescription: 生命在于折腾，又把博客折腾到Hexo了。给Hexo点赞。 模版（Scaffold） hexo new photo “My Gallery” 变量 描述 layout 布局 title 标题 date 文件建立日期 设置文章摘要 1以上是文章摘要 &lt;!--more--&gt; 以下是余下全文 写作 hexo new page hexo new post 变量 描述 :title 标题 :year 建立的年份（4 位数） :month 建立的月份（2 位数） :i_month 建立的月份（去掉开头的零） :day 建立的日期（2 位数） :i_day 建立的日期（去掉开头的零） 推送到服务器上 123hexo n #写文章hexo g #生成hexo d #部署 #可与hexo g合并为 hexo d -g 报错 1.找不到git部署 1ERROR Deployer not found: git 解决方法 npm install hexo-deployer-git --save 3.部署类型设置git hexo 3.0 部署类型不再是github，_config.yml 中修改 Deployment Docs: http://hexo.io/docs/deployment.html 1234deploy: type: git repository: git@***.github.com:***/***.github.io.git branch: master xcodebuild xcode-select: error: tool ‘xcodebuild’ requires Xcode, but active developer directory ‘/Library/Developer/CommandLineTools’ is a command line tools instance npm install bcrypt RSS不显示 安装RSS插件 1npm install hexo-generator-feed --save 开启RSS功能 编辑hexo/_config.yml，添加如下代码： rss: /atom.xml #rss地址 默认即可 开启评论 1.我使用多说代替自带的评论，在多说 网站注册 &gt; 后台管理 &gt; 添加新站点 &gt; 工具 === 复制通用代码 里面有 short_name 在根目录 _config.yml 添加一行 disqus_shortname: jslite 是在多说注册时产生的 复制到 themes\\landscape\\layout_partial\\article.ejs 把 12345678&lt;% if (!index &amp;&amp; post.comments &amp;&amp; config.disqus_shortname)&#123; %&gt;&lt;section id=&quot;comments&quot;&gt;&lt;div id=&quot;disqus_thread&quot;&gt; &lt;noscript&gt;Please enable JavaScript to view the &lt;a href=&quot;//disqus.com/?ref_noscript&quot;&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/section&gt;&lt;% &#125; %&gt; 改为 1234567891011121314151617181920&lt;% if (!index &amp;&amp; post.comments &amp;&amp; config.disqus_shortname)&#123; %&gt; &lt;section id=&quot;comments&quot;&gt; &lt;!-- 多说评论框 start --&gt; &lt;div class=&quot;ds-thread&quot; data-thread-key=&quot;&lt;%= post.layout %&gt;-&lt;%= post.slug %&gt;&quot; data-title=&quot;&lt;%= post.title %&gt;&quot; data-url=&quot;&lt;%= page.permalink %&gt;&quot;&gt;&lt;/div&gt; &lt;!-- 多说评论框 end --&gt; &lt;!-- 多说公共JS代码 start (一个网页只需插入一次) --&gt; &lt;script type=&quot;text/javascript&quot;&gt; var duoshuoQuery = &#123;short_name:&#x27;&lt;%= config.disqus_shortname %&gt;&#x27;&#125;; (function() &#123; var ds = document.createElement(&#x27;script&#x27;); ds.type = &#x27;text/javascript&#x27;;ds.async = true; ds.src = (document.location.protocol == &#x27;https:&#x27; ? &#x27;https:&#x27; : &#x27;http:&#x27;) + &#x27;//static.duoshuo.com/embed.js&#x27;; ds.charset = &#x27;UTF-8&#x27;; (document.getElementsByTagName(&#x27;head&#x27;)[0] || document.getElementsByTagName(&#x27;body&#x27;)[0]).appendChild(ds); &#125;)(); &lt;/script&gt; &lt;!-- 多说公共JS代码 end --&gt; &lt;/section&gt;&lt;% &#125; %&gt;","categories":[{"name":"个人博客维护","slug":"个人博客维护","permalink":"https://jimmywan2022.github.io/categories/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%BB%B4%E6%8A%A4/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://jimmywan2022.github.io/tags/hexo/"}]},{"title":"Hello World","slug":"hello-world","date":"2022-11-12T14:58:52.137Z","updated":"2022-11-12T13:43:50.124Z","comments":true,"path":"2022/11/12/hello-world/","link":"","permalink":"https://jimmywan2022.github.io/2022/11/12/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick Start Create a new post 1$ hexo new &quot;My New Post&quot; More info: Writing Run server 1$ hexo server More info: Server Generate static files 1$ hexo generate More info: Generating Deploy to remote sites 1$ hexo deploy More info: Deployment","categories":[],"tags":[]}],"categories":[{"name":"个人博客维护","slug":"个人博客维护","permalink":"https://jimmywan2022.github.io/categories/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%BB%B4%E6%8A%A4/"}],"tags":[{"name":"编程","slug":"编程","permalink":"https://jimmywan2022.github.io/tags/%E7%BC%96%E7%A8%8B/"},{"name":"博客模板选择","slug":"博客模板选择","permalink":"https://jimmywan2022.github.io/tags/%E5%8D%9A%E5%AE%A2%E6%A8%A1%E6%9D%BF%E9%80%89%E6%8B%A9/"},{"name":"windows权限","slug":"windows权限","permalink":"https://jimmywan2022.github.io/tags/windows%E6%9D%83%E9%99%90/"},{"name":"hexo","slug":"hexo","permalink":"https://jimmywan2022.github.io/tags/hexo/"}]}